"use strict";(self.webpackChunk_prismal_website_react=self.webpackChunk_prismal_website_react||[]).push([[5040],{1184:(e,s,r)=>{r.d(s,{R:()=>l,x:()=>c});var t=r(6540);const n={},o=t.createContext(n);function l(e){const s=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(o.Provider,{value:s},e.children)}},2838:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>i,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"react/functions/useScrollThreshold","title":"Function: useScrollThreshold()","description":"useScrollThreshold(threshold): boolean","source":"@site/docs/react/functions/useScrollThreshold.md","sourceDirName":"react/functions","slug":"/react/functions/useScrollThreshold","permalink":"/prismal/docs/react/functions/useScrollThreshold","draft":false,"unlisted":false,"editUrl":"https://github.com/onyx-og/prismal/tree/main/packages/website/docs/react/functions/useScrollThreshold.md","tags":[],"version":"current","frontMatter":{},"sidebar":"react","previous":{"title":"Function: useModal()","permalink":"/prismal/docs/react/functions/useModal"},"next":{"title":"Function: useSidebar()","permalink":"/prismal/docs/react/functions/useSidebar"}}');var n=r(4848),o=r(1184);const l={},c="Function: useScrollThreshold()",i={},h=[{value:"Parameters",id:"parameters",level:2},{value:"threshold",id:"threshold",level:3},{value:"Returns",id:"returns",level:2}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"function-usescrollthreshold",children:"Function: useScrollThreshold()"})}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"useScrollThreshold"}),"(",(0,n.jsx)(s.code,{children:"threshold"}),"): ",(0,n.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Defined in: ",(0,n.jsx)(s.a,{href:"https://github.com/onyx-og/prismal-react/blob/c800194f7409ec5ee2985ddabc203568950fbd7d/packages/react/src/hooks/useScrollPosition/index.ts#L8",children:"hooks/useScrollPosition/index.ts:8"})]}),"\n",(0,n.jsx)(s.p,{children:"Custom hook to check if the user has scrolled past a specific position."}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"threshold",children:"threshold"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"number"})}),"\n",(0,n.jsx)(s.p,{children:"The vertical scroll position in pixels to trigger the state update."}),"\n",(0,n.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"boolean"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"True if the scroll position is at or past the threshold, false otherwise."}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);