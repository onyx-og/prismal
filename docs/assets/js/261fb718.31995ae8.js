"use strict";(self.webpackChunk_prismal_website_react=self.webpackChunk_prismal_website_react||[]).push([[5868],{1184:(e,l,r)=>{r.d(l,{R:()=>o,x:()=>c});var s=r(6540);const n={},t=s.createContext(n);function o(e){const l=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function c(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(t.Provider,{value:l},e.children)}},4265:(e,l,r)=>{r.r(l),r.d(l,{assets:()=>i,contentTitle:()=>c,default:()=>a,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"react/functions/useElScrollThreshold","title":"Function: useElScrollThreshold()","description":"useElScrollThreshold(elementRef, refTrigger, offset?, threshold?, scrollEl?): boolean","source":"@site/docs/react/functions/useElScrollThreshold.md","sourceDirName":"react/functions","slug":"/react/functions/useElScrollThreshold","permalink":"/prismal/docs/react/functions/useElScrollThreshold","draft":false,"unlisted":false,"editUrl":"https://github.com/onyx-og/prismal/tree/main/packages/website/docs/react/functions/useElScrollThreshold.md","tags":[],"version":"current","frontMatter":{},"sidebar":"react","previous":{"title":"Function: useElScrollPosition()","permalink":"/prismal/docs/react/functions/useElScrollPosition"},"next":{"title":"Function: useElementHeight()","permalink":"/prismal/docs/react/functions/useElementHeight"}}');var n=r(4848),t=r(1184);const o={},c="Function: useElScrollThreshold()",i={},d=[{value:"Parameters",id:"parameters",level:2},{value:"elementRef",id:"elementref",level:3},{value:"refTrigger",id:"reftrigger",level:3},{value:"offset?",id:"offset",level:3},{value:"threshold?",id:"threshold",level:3},{value:"scrollEl?",id:"scrollel",level:3},{value:"Returns",id:"returns",level:2},{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2}];function h(e){const l={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.header,{children:(0,n.jsx)(l.h1,{id:"function-useelscrollthreshold",children:"Function: useElScrollThreshold()"})}),"\n",(0,n.jsxs)(l.blockquote,{children:["\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.strong,{children:"useElScrollThreshold"}),"(",(0,n.jsx)(l.code,{children:"elementRef"}),", ",(0,n.jsx)(l.code,{children:"refTrigger"}),", ",(0,n.jsx)(l.code,{children:"offset?"}),", ",(0,n.jsx)(l.code,{children:"threshold?"}),", ",(0,n.jsx)(l.code,{children:"scrollEl?"}),"): ",(0,n.jsx)(l.code,{children:"boolean"})]}),"\n"]}),"\n",(0,n.jsxs)(l.p,{children:["Defined in: ",(0,n.jsx)(l.a,{href:"https://github.com/onyx-og/prismal/blob/7e948b825c73ffc9bb10fe5a1890783eb7215c77/packages/react/src/hooks/useScrollPosition/index.ts#L50",children:"hooks/useScrollPosition/index.ts:50"})]}),"\n",(0,n.jsx)(l.p,{children:"useElScrollThreshold"}),"\n",(0,n.jsx)(l.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(l.h3,{id:"elementref",children:"elementRef"}),"\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.code,{children:"RefObject"}),"<",(0,n.jsx)(l.code,{children:"null"})," | ",(0,n.jsx)(l.code,{children:"HTMLElement"}),">"]}),"\n",(0,n.jsx)(l.p,{children:"Ref to the element to track."}),"\n",(0,n.jsx)(l.h3,{id:"reftrigger",children:"refTrigger"}),"\n",(0,n.jsx)(l.p,{children:"A trigger to re-run the effect when the ref is set."}),"\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.code,{children:"string"})," | ",(0,n.jsx)(l.code,{children:"number"})," | ",(0,n.jsx)(l.code,{children:"boolean"})]}),"\n",(0,n.jsx)(l.h3,{id:"offset",children:"offset?"}),"\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.code,{children:"number"})," = ",(0,n.jsx)(l.code,{children:"0"})]}),"\n",(0,n.jsx)(l.p,{children:"An offset to apply to the element's position."}),"\n",(0,n.jsx)(l.h3,{id:"threshold",children:"threshold?"}),"\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.code,{children:"number"})," = ",(0,n.jsx)(l.code,{children:"0"})]}),"\n",(0,n.jsx)(l.p,{children:"The scroll threshold from the top of the viewport."}),"\n",(0,n.jsx)(l.h3,{id:"scrollel",children:"scrollEl?"}),"\n",(0,n.jsx)(l.p,{children:"The element to attach the scroll listener to."}),"\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.code,{children:"HTMLElement"})," | ",(0,n.jsx)(l.code,{children:"Document"})]}),"\n",(0,n.jsx)(l.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.code,{children:"boolean"})}),"\n",(0,n.jsx)(l.p,{children:"True if the element has scrolled past the threshold."}),"\n",(0,n.jsx)(l.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(l.p,{children:"Tracks if an element has scrolled past a certain threshold in the viewport."}),"\n",(0,n.jsx)(l.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-ts",children:"const myRef = useRef(null);\nconst [refSet, setRefSet] = useState(false);\nconst isPast = useElScrollThreshold(myRef, refSet, 50);\n"})})]})}function a(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,n.jsx)(l,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);